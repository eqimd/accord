// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: accord.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash      *string       `protobuf:"bytes,1,req,name=hash" json:"hash,omitempty"`
	Timestamp *TxnTimestamp `protobuf:"bytes,2,req,name=timestamp" json:"timestamp,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_accord_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *Transaction) GetTimestamp() *TxnTimestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TxnTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalTime   *uint64 `protobuf:"varint,1,req,name=local_time,json=localTime" json:"local_time,omitempty"`
	LogicalTime *int32  `protobuf:"varint,2,req,name=logical_time,json=logicalTime" json:"logical_time,omitempty"`
	Pid         *int32  `protobuf:"varint,3,req,name=pid" json:"pid,omitempty"`
}

func (x *TxnTimestamp) Reset() {
	*x = TxnTimestamp{}
	mi := &file_accord_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxnTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnTimestamp) ProtoMessage() {}

func (x *TxnTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnTimestamp.ProtoReflect.Descriptor instead.
func (*TxnTimestamp) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{1}
}

func (x *TxnTimestamp) GetLocalTime() uint64 {
	if x != nil && x.LocalTime != nil {
		return *x.LocalTime
	}
	return 0
}

func (x *TxnTimestamp) GetLogicalTime() int32 {
	if x != nil && x.LogicalTime != nil {
		return *x.LogicalTime
	}
	return 0
}

func (x *TxnTimestamp) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

type PreAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn    *Transaction  `protobuf:"bytes,1,req,name=txn" json:"txn,omitempty"`
	Keys   []string      `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	Ts0    *TxnTimestamp `protobuf:"bytes,3,req,name=ts0" json:"ts0,omitempty"`
	Sender *int32        `protobuf:"varint,4,req,name=sender" json:"sender,omitempty"`
}

func (x *PreAcceptRequest) Reset() {
	*x = PreAcceptRequest{}
	mi := &file_accord_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreAcceptRequest) ProtoMessage() {}

func (x *PreAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreAcceptRequest.ProtoReflect.Descriptor instead.
func (*PreAcceptRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{2}
}

func (x *PreAcceptRequest) GetTxn() *Transaction {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *PreAcceptRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PreAcceptRequest) GetTs0() *TxnTimestamp {
	if x != nil {
		return x.Ts0
	}
	return nil
}

func (x *PreAcceptRequest) GetSender() int32 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

type PreAcceptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts   *TxnTimestamp  `protobuf:"bytes,1,req,name=ts" json:"ts,omitempty"`
	Deps []*Transaction `protobuf:"bytes,2,rep,name=deps" json:"deps,omitempty"`
}

func (x *PreAcceptResponse) Reset() {
	*x = PreAcceptResponse{}
	mi := &file_accord_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreAcceptResponse) ProtoMessage() {}

func (x *PreAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreAcceptResponse.ProtoReflect.Descriptor instead.
func (*PreAcceptResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{3}
}

func (x *PreAcceptResponse) GetTs() *TxnTimestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *PreAcceptResponse) GetDeps() []*Transaction {
	if x != nil {
		return x.Deps
	}
	return nil
}

type AcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn    *Transaction  `protobuf:"bytes,1,req,name=txn" json:"txn,omitempty"`
	Keys   []string      `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	Ts     *TxnTimestamp `protobuf:"bytes,3,req,name=ts" json:"ts,omitempty"`
	Sender *int32        `protobuf:"varint,4,req,name=sender" json:"sender,omitempty"`
}

func (x *AcceptRequest) Reset() {
	*x = AcceptRequest{}
	mi := &file_accord_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRequest) ProtoMessage() {}

func (x *AcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRequest.ProtoReflect.Descriptor instead.
func (*AcceptRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptRequest) GetTxn() *Transaction {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *AcceptRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *AcceptRequest) GetTs() *TxnTimestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *AcceptRequest) GetSender() int32 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

type AcceptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deps []*Transaction `protobuf:"bytes,1,rep,name=deps" json:"deps,omitempty"`
}

func (x *AcceptResponse) Reset() {
	*x = AcceptResponse{}
	mi := &file_accord_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptResponse) ProtoMessage() {}

func (x *AcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptResponse.ProtoReflect.Descriptor instead.
func (*AcceptResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptResponse) GetDeps() []*Transaction {
	if x != nil {
		return x.Deps
	}
	return nil
}

type CommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn    *Transaction  `protobuf:"bytes,1,req,name=txn" json:"txn,omitempty"`
	Ts     *TxnTimestamp `protobuf:"bytes,2,req,name=ts" json:"ts,omitempty"`
	Sender *int32        `protobuf:"varint,4,req,name=sender" json:"sender,omitempty"`
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_accord_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{6}
}

func (x *CommitRequest) GetTxn() *Transaction {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *CommitRequest) GetTs() *TxnTimestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *CommitRequest) GetSender() int32 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

type CommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	mi := &file_accord_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{7}
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn    *Transaction   `protobuf:"bytes,1,req,name=txn" json:"txn,omitempty"`
	Keys   []string       `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	Ts     *TxnTimestamp  `protobuf:"bytes,3,req,name=ts" json:"ts,omitempty"`
	Deps   []*Transaction `protobuf:"bytes,4,rep,name=deps" json:"deps,omitempty"`
	Sender *int32         `protobuf:"varint,5,req,name=sender" json:"sender,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_accord_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{8}
}

func (x *ReadRequest) GetTxn() *Transaction {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *ReadRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ReadRequest) GetTs() *TxnTimestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ReadRequest) GetDeps() []*Transaction {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *ReadRequest) GetSender() int32 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reads map[string]string `protobuf:"bytes,1,rep,name=reads" json:"reads,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_accord_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{9}
}

func (x *ReadResponse) GetReads() map[string]string {
	if x != nil {
		return x.Reads
	}
	return nil
}

type ApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn    *Transaction      `protobuf:"bytes,1,req,name=txn" json:"txn,omitempty"`
	Ts     *TxnTimestamp     `protobuf:"bytes,2,req,name=ts" json:"ts,omitempty"`
	Deps   []*Transaction    `protobuf:"bytes,3,rep,name=deps" json:"deps,omitempty"`
	Result map[string]string `protobuf:"bytes,4,rep,name=result" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sender *int32            `protobuf:"varint,5,req,name=sender" json:"sender,omitempty"`
}

func (x *ApplyRequest) Reset() {
	*x = ApplyRequest{}
	mi := &file_accord_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRequest) ProtoMessage() {}

func (x *ApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRequest.ProtoReflect.Descriptor instead.
func (*ApplyRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{10}
}

func (x *ApplyRequest) GetTxn() *Transaction {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *ApplyRequest) GetTs() *TxnTimestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ApplyRequest) GetDeps() []*Transaction {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *ApplyRequest) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ApplyRequest) GetSender() int32 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

type ApplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplyResponse) Reset() {
	*x = ApplyResponse{}
	mi := &file_accord_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyResponse) ProtoMessage() {}

func (x *ApplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyResponse.ProtoReflect.Descriptor instead.
func (*ApplyResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{11}
}

type PidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PidRequest) Reset() {
	*x = PidRequest{}
	mi := &file_accord_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidRequest) ProtoMessage() {}

func (x *PidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidRequest.ProtoReflect.Descriptor instead.
func (*PidRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{12}
}

type PidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid *int32 `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
}

func (x *PidResponse) Reset() {
	*x = PidResponse{}
	mi := &file_accord_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidResponse) ProtoMessage() {}

func (x *PidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidResponse.ProtoReflect.Descriptor instead.
func (*PidResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{13}
}

func (x *PidResponse) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	mi := &file_accord_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{14}
}

type SnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[string]string `protobuf:"bytes,1,rep,name=result" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *SnapshotResponse) Reset() {
	*x = SnapshotResponse{}
	mi := &file_accord_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotResponse) ProtoMessage() {}

func (x *SnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotResponse.ProtoReflect.Descriptor instead.
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{15}
}

func (x *SnapshotResponse) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *string `protobuf:"bytes,1,req,name=query" json:"query,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_accord_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{16}
}

func (x *ExecuteRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type ExecuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *string `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	mi := &file_accord_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accord_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_accord_proto_rawDescGZIP(), []int{17}
}

func (x *ExecuteResponse) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

var File_accord_proto protoreflect.FileDescriptor

var file_accord_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e,
	0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x62,
	0x0a, 0x0c, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x22, 0x7f, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x03, 0x74, 0x73,
	0x30, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x74, 0x73, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x22, 0x7a, 0x0a, 0x0d, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x78,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1d,
	0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x22, 0x66, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x78,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x1d, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x74, 0x78, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x22, 0x78, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x74,
	0x78, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x1d, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x78, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x65,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1f, 0x0a, 0x0b, 0x50, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x0e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x29, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32,
	0xc1, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x34, 0x0a, 0x09, 0x50,
	0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x11, 0x2e, 0x50, 0x72, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x50, 0x72,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x0e, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x04, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x0c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x28, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0d, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x03,
	0x50, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0c, 0x2e, 0x50, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x10, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x3d, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x0f, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x71, 0x69, 0x6d, 0x64, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x72, 0x70, 0x63,
}

var (
	file_accord_proto_rawDescOnce sync.Once
	file_accord_proto_rawDescData = file_accord_proto_rawDesc
)

func file_accord_proto_rawDescGZIP() []byte {
	file_accord_proto_rawDescOnce.Do(func() {
		file_accord_proto_rawDescData = protoimpl.X.CompressGZIP(file_accord_proto_rawDescData)
	})
	return file_accord_proto_rawDescData
}

var file_accord_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_accord_proto_goTypes = []any{
	(*Transaction)(nil),       // 0: Transaction
	(*TxnTimestamp)(nil),      // 1: TxnTimestamp
	(*PreAcceptRequest)(nil),  // 2: PreAcceptRequest
	(*PreAcceptResponse)(nil), // 3: PreAcceptResponse
	(*AcceptRequest)(nil),     // 4: AcceptRequest
	(*AcceptResponse)(nil),    // 5: AcceptResponse
	(*CommitRequest)(nil),     // 6: CommitRequest
	(*CommitResponse)(nil),    // 7: CommitResponse
	(*ReadRequest)(nil),       // 8: ReadRequest
	(*ReadResponse)(nil),      // 9: ReadResponse
	(*ApplyRequest)(nil),      // 10: ApplyRequest
	(*ApplyResponse)(nil),     // 11: ApplyResponse
	(*PidRequest)(nil),        // 12: PidRequest
	(*PidResponse)(nil),       // 13: PidResponse
	(*SnapshotRequest)(nil),   // 14: SnapshotRequest
	(*SnapshotResponse)(nil),  // 15: SnapshotResponse
	(*ExecuteRequest)(nil),    // 16: ExecuteRequest
	(*ExecuteResponse)(nil),   // 17: ExecuteResponse
	nil,                       // 18: ReadResponse.ReadsEntry
	nil,                       // 19: ApplyRequest.ResultEntry
	nil,                       // 20: SnapshotResponse.ResultEntry
}
var file_accord_proto_depIdxs = []int32{
	1,  // 0: Transaction.timestamp:type_name -> TxnTimestamp
	0,  // 1: PreAcceptRequest.txn:type_name -> Transaction
	1,  // 2: PreAcceptRequest.ts0:type_name -> TxnTimestamp
	1,  // 3: PreAcceptResponse.ts:type_name -> TxnTimestamp
	0,  // 4: PreAcceptResponse.deps:type_name -> Transaction
	0,  // 5: AcceptRequest.txn:type_name -> Transaction
	1,  // 6: AcceptRequest.ts:type_name -> TxnTimestamp
	0,  // 7: AcceptResponse.deps:type_name -> Transaction
	0,  // 8: CommitRequest.txn:type_name -> Transaction
	1,  // 9: CommitRequest.ts:type_name -> TxnTimestamp
	0,  // 10: ReadRequest.txn:type_name -> Transaction
	1,  // 11: ReadRequest.ts:type_name -> TxnTimestamp
	0,  // 12: ReadRequest.deps:type_name -> Transaction
	18, // 13: ReadResponse.reads:type_name -> ReadResponse.ReadsEntry
	0,  // 14: ApplyRequest.txn:type_name -> Transaction
	1,  // 15: ApplyRequest.ts:type_name -> TxnTimestamp
	0,  // 16: ApplyRequest.deps:type_name -> Transaction
	19, // 17: ApplyRequest.result:type_name -> ApplyRequest.ResultEntry
	20, // 18: SnapshotResponse.result:type_name -> SnapshotResponse.ResultEntry
	2,  // 19: Replica.PreAccept:input_type -> PreAcceptRequest
	4,  // 20: Replica.Accept:input_type -> AcceptRequest
	6,  // 21: Replica.Commit:input_type -> CommitRequest
	8,  // 22: Replica.Read:input_type -> ReadRequest
	10, // 23: Replica.Apply:input_type -> ApplyRequest
	12, // 24: Replica.Pid:input_type -> PidRequest
	14, // 25: Replica.Snapshot:input_type -> SnapshotRequest
	16, // 26: Coordinator.Execute:input_type -> ExecuteRequest
	3,  // 27: Replica.PreAccept:output_type -> PreAcceptResponse
	5,  // 28: Replica.Accept:output_type -> AcceptResponse
	7,  // 29: Replica.Commit:output_type -> CommitResponse
	9,  // 30: Replica.Read:output_type -> ReadResponse
	11, // 31: Replica.Apply:output_type -> ApplyResponse
	13, // 32: Replica.Pid:output_type -> PidResponse
	15, // 33: Replica.Snapshot:output_type -> SnapshotResponse
	17, // 34: Coordinator.Execute:output_type -> ExecuteResponse
	27, // [27:35] is the sub-list for method output_type
	19, // [19:27] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_accord_proto_init() }
func file_accord_proto_init() {
	if File_accord_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accord_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_accord_proto_goTypes,
		DependencyIndexes: file_accord_proto_depIdxs,
		MessageInfos:      file_accord_proto_msgTypes,
	}.Build()
	File_accord_proto = out.File
	file_accord_proto_rawDesc = nil
	file_accord_proto_goTypes = nil
	file_accord_proto_depIdxs = nil
}
